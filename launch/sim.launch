<!-- Copyright (c) 2017, United States Government, as represented by the     -->
<!-- Administrator of the National Aeronautics and Space Administration.     -->
<!--                                                                         -->
<!-- All rights reserved.                                                    -->
<!--                                                                         -->
<!-- The Astrobee platform is licensed under the Apache License, Version 2.0 -->
<!-- (the "License"); you may not use this file except in compliance with    -->
<!-- the License. You may obtain a copy of the License at                    -->
<!--                                                                         -->
<!--     http://www.apache.org/licenses/LICENSE-2.0                          -->
<!--                                                                         -->
<!-- Unless required by applicable law or agreed to in writing, software     -->
<!-- distributed under the License is distributed on an "AS IS" BASIS,       -->
<!-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or         -->
<!-- implied. See the License for the specific language governing            -->
<!-- permissions and limitations under the License.                          -->

<launch>

  <!-- Context options (NB: THESE ARE OVERRIDDEN BY ENVIRONMENT VARIABLES)   -->
  <!-- Set robot and world correctly; environment variable over rule default -->
  <arg name="robot" default="$(optenv ASTROBEE_ROBOT sim)" />
  <arg name="world" default="$(optenv ASTROBEE_WORLD iss)" />
  <arg name="perch" default="false" />
  <arg name="ns" default="" />                  <!-- Robot namespace prefix  -->
  <arg name="output" default="log"/>            <!-- Where nodes should log  -->
  <arg name="spurn" default=""/>                <!-- Prevent a specific node -->
  <arg name="nodes" default=""/>                <!-- Launch specific nodes   -->
  <arg name="extra" default=""/>                <!-- Inject additional node  -->
  <arg name="debug" default=""/>                <!-- Debug node group        -->
  <arg name="sim" default="local" />            <!-- SIM IP address          -->
  <arg name="llp" default="local" />            <!-- LLP IP address          -->
  <arg name="mlp" default="local" />            <!-- MLP IP address          -->
  <arg name="rec" default="" />                 <!-- Record local data       -->
  <arg name="dds" default="false" />             <!-- Enable DDS              -->
  <arg name="ground_truth_localizer" default="false" />  <!-- Use Ground Truth Localizer      -->

  <!-- General options -->
  <arg name="gviz" default="false" />           <!-- Start GNC visualizer    -->
  <arg name="rviz" default="false" />           <!-- Start visualization     -->
  <arg name="sviz" default="false" />           <!-- Start simulation GUI    -->
  <arg name="rqt" default="false" />            <!-- Start user interface    -->
  <arg name="gds" default="false" />            <!-- Enable GDS              -->
  <arg name="agent1" default="Bsharp"/>         <!-- GDS Agent1              -->
  <arg name="agent2" default="Bumble"/>         <!-- GDS Agent2              -->
  <arg name="agent3" default="Honey"/>          <!-- GDS Agent3              -->
  <arg name="vmware" default="true" />          <!-- Enable vmware           -->
  <arg name="speed" default="1" />              <!-- Speed multiplier        -->
  <arg name="sdebug" default="false" />         <!-- Debug simulator         -->
  <arg name="stats" default="false" />          <!-- Message statistics      -->

  <!-- Debug-specific options -->
  <arg name="default_robot" default="false" />   <!-- Insert default robot    -->
  <arg if="$(eval arg('world')=='iss' and arg('perch')==0)"
       name="pose"
       default="9.816 -9.806 4.293 0 0 0 1" />    <!-- iss: docked in JPM berth 1 -->
       <!-- default="9.817 -10.312 4.293 1 0 0 0" /> - iss: docked in JPM berth 2 -->
  <arg if="$(eval arg('world')=='iss' and arg('perch'))"
       name="pose"
       default="10.7 -8.3 5.1 0.707 0 -0.707 0" />           <!-- iss: perch position     -->
  <arg if="$(eval arg('world')=='granite' and arg('perch')==0)"
       name="pose"
       default="0 0 -0.7 0 0 0 1" />                         <!-- granite: docked         -->
  <arg if="$(eval arg('world')=='granite' and arg('perch'))"
       name="pose"
       default="0 0 -0.7 0 0 0 1" />                         <!-- granite: perch position -->

  <arg name="bumble_pose" default="" />         <!-- Use to overide bumble's pose -->

  <!-- Multi-robot simulation -->
  <arg name="default" default="false" />         <!-- Insert default robot    -->
  <arg name="honey" default="true" />          <!-- Insert a honey robot    -->
  <arg name="bumble" default="true" />         <!-- Insert a bumble robot   -->
  <arg name="queen" default="true" />          <!-- Insert a queen robot    -->

  <!-- Make sure all environment variables are set for controller -->
  <!-- Override the robot and world environment variables all the time. The -->
  <!-- environment variables are the default if they are set. So in this -->
  <!-- case we are overriding the environment variables with themselves. -->
  <!-- Roslaunch arguments override the environment variable which is what -->
  <!-- this will do. -->
  <env name="ASTROBEE_ROBOT" value="$(arg robot)" />
  <env name="ASTROBEE_WORLD" value="$(arg world)" />
  <env if="$(eval optenv('ASTROBEE_CONFIG_DIR','')=='')"
       name="ASTROBEE_CONFIG_DIR" value="$(find astrobee)/config" />
  <env if="$(eval optenv('ASTROBEE_RESOURCE_DIR','')=='')"
       name="ASTROBEE_RESOURCE_DIR" value="$(find astrobee)/resources" />
  <env if="$(eval optenv('ROSCONSOLE_CONFIG_FILE','')=='')"
       name="ROSCONSOLE_CONFIG_FILE" value="$(find astrobee)/resources/logging.config"/>

  <!-- Declare our global logging format -->
  <env name="ROSCONSOLE_FORMAT" value="[${severity}] [${time}] : (${logger}) ${message}"/>

  <!-- Always launch on the local machine -->
  <group>
    <machine name ="local" address="localhost" default="true"/>
    <!-- Start the descriptions (ISS, dock, granite) for visualization purposes -->
    <include file="$(find astrobee)/launch/controller/descriptions.launch">
      <arg name="world" value="$(arg world)"/>
    </include>
    <!-- Start ground controller services -->
    <include if="$(arg stats)" file="$(find astrobee)/launch/controller/stats.launch"/>
    <include if="$(arg gviz)" file="$(find astrobee)/launch/controller/gviz.launch"/>
    <include if="$(arg gds)" file="$(find astrobee)/launch/controller/gds.launch">
      <arg name="world" value="$(arg world)"/>
      <arg name="agent1" value="$(arg agent1)"/>
      <arg name="agent2" value="$(arg agent2)"/>
      <arg name="agent3" value="$(arg agent3)"/>
    </include>
    <include if="$(arg rqt)" file="$(find astrobee)/launch/controller/rqt.launch"/>
    <include if="$(arg rviz)" file="$(find astrobee)/launch/controller/rviz.launch">
      <arg name="world" value="$(arg world)"/>
    </include>
    <!-- Launch a recorder for this robot-->
    <include unless="$(eval arg('rec')=='')"
             file="$(find astrobee)/launch/controller/bagrecord.launch">
      <arg name="bag" value="$(arg rec)"/>
    </include>
  </group>

  <!-- Allow the simulator to be optionally launched remotely-->
  <!-- Connect and update environment variables if required -->
  <machine unless="$(eval arg('sim')=='local')" name="sim_server" default="true"
           address="$(arg sim)" user="astrobee" password="astrobee" timeout="10"/>
  <!-- Update the environment variables relating to absolute paths -->
  <env unless="$(eval arg('sim')=='local')"
       name="ASTROBEE_CONFIG_DIR" value="/home/astrobee/native/config" />
  <env unless="$(eval arg('sim')=='local')"
       name="ASTROBEE_RESOURCE_DIR" value="home/astrobee/native/resources" />
  <env unless="$(eval arg('sim')=='local')"
       name="ROSCONSOLE_CONFIG_FILE" value="/home/astrobee/native/resources/logging.config"/>
  <env unless="$(eval arg('sim')=='local')"
       name="DISPLAY" value=":0"/>
  <env unless="$(eval arg('sim')=='local')"
       name="ROS_IP" value="$(arg sim)"/>
  <!-- Start the simulator -->
  <include file="$(find astrobee)/launch/controller/sim_start.launch">
    <arg name="world" value="$(arg world)" />
    <arg name="sviz" value="$(arg sviz)" />
    <arg name="vmware" value="$(arg vmware)" />
    <arg name="speed" value="$(arg speed)" />
    <arg name="debug" value="$(arg sdebug)" />
  </include>

  <!-- Auto-inert platform #1 at a desired initial location -->
  <group if="$(arg default_robot)">
    <include file="$(find astrobee)/launch/spawn.launch">
      <arg name="robot" value="$(arg robot)" />      <!-- Type of robot      -->
      <arg name="world" value="$(arg world)" />      <!-- Execution context  -->
      <arg name="ns" value="$(arg ns)" />            <!-- Robot namespace    -->
      <arg name="output" value="$(arg output)" />    <!-- Output for logging -->
      <arg name="pose" value="$(arg pose)" />        <!-- Initial robot pose -->
      <arg name="spurn" value="$(arg spurn)" />      <!-- Prevent node       -->
      <arg name="nodes" value="$(arg nodes)" />      <!-- Launch node group  -->
      <arg name="extra" value="$(arg extra)" />      <!-- Inject extra nodes -->
      <arg name="debug" value="$(arg debug)" />      <!-- Debug a node set   -->
      <arg name="sim" value="$(arg sim)" />          <!-- SIM IP address     -->
      <arg name="llp" value="$(arg llp)" />          <!-- LLP IP address     -->
      <arg name="mlp" value="$(arg mlp)" />          <!-- MLP IP address     -->
      <arg name="dds" value="$(arg dds)" />          <!-- Enable DDS         -->
      <arg name="ground_truth_localizer" value="$(arg ground_truth_localizer)" /> <!-- Use Ground Truth Localizer    -->
    </include>
  </group>

  <!-- Auto-insert honey at a canned location -->
  <group if="$(arg honey)">
    <include file="$(find astrobee)/launch/spawn.launch">
      <arg name="robot" value="$(arg robot)" />      <!-- Type of robot      -->
      <arg name="world" value="$(arg world)" />      <!-- Execution context  -->
      <arg name="ns" value="honey" />                <!-- Robot namespace    -->
      <arg name="output" value="$(arg output)" />    <!-- Output for logging -->
      <arg name="pose" value="11 -8 4.5 0 0 -0.707 0.707" />    <!-- Initial robot pose -->
      <arg name="spurn" value="$(arg spurn)" />      <!-- Prevent node       -->
      <arg name="nodes" value="$(arg nodes)" />      <!-- Launch node group  -->
      <arg name="extra" value="$(arg extra)" />      <!-- Inject extra nodes -->
      <arg name="debug" value="$(arg debug)" />      <!-- Debug a node   set   -->
      <arg name="sim" value="$(arg sim)" />          <!-- SIM IP address     -->
      <arg name="llp" value="$(arg llp)" />          <!-- LLP IP address     -->
      <arg name="mlp" value="$(arg mlp)" />          <!-- MLP IP address     -->
      <arg name="dds" value="$(arg dds)" />          <!-- Enable DDS         -->
    </include>
  </group>

  <!-- Auto-insert bumble at a canned location -->
  <group if="$(arg bumble)">
    <include file="$(find astrobee)/launch/spawn.launch">
      <arg name="robot" value="$(arg robot)" />      <!-- Type of robot      -->
      <arg name="world" value="$(arg world)" />      <!-- Execution context  -->
      <arg name="ns" value="bumble" />               <!-- Robot namespace    -->
      <arg name="output" value="$(arg output)" />    <!-- Output for logging -->
      <arg if="$(eval arg('bumble_pose') == '')"
           name="pose"  value="11 -7 4.5 0 0 -0.707 0.707" />   <!-- Initial robot pose -->
      <arg unless="$(eval arg('bumble_pose') == '')"
           name="pose"  value="$(arg bumble_pose)" />
      <arg name="spurn" value="$(arg spurn)" />      <!-- Prevent node       -->
      <arg name="nodes" value="$(arg nodes)" />      <!-- Launch node group  -->
      <arg name="extra" value="$(arg extra)" />      <!-- Inject extra nodes -->
      <arg name="debug" value="$(arg debug)" />      <!-- Debug a node set   -->
      <arg name="sim" value="$(arg sim)" />          <!-- SIM IP address     -->
      <arg name="llp" value="$(arg llp)" />          <!-- LLP IP address     -->
      <arg name="mlp" value="$(arg mlp)" />          <!-- MLP IP address     -->
      <arg name="dds" value="$(arg dds)" />          <!-- Enable DDS         -->
    </include>
  </group>

  <!-- Auto-insert queen at a canned location -->
  <group if="$(arg queen)">
    <include file="$(find astrobee)/launch/spawn.launch">
      <arg name="robot" value="$(arg robot)" />      <!-- Type of robot      -->
      <arg name="world" value="$(arg world)" />      <!-- Execution context  -->
      <arg name="ns" value="queen" />                <!-- Robot namespace    -->
      <arg name="output" value="$(arg output)" />    <!-- Output for logging   -->
      <arg name="pose" value="11 -5 4.5 0 0 -0.707 0.707" />    <!-- Initial robot pose -->
      <arg name="spurn" value="$(arg spurn)" />      <!-- Prevent node       -->
      <arg name="nodes" value="$(arg nodes)" />      <!-- Launch node group  -->
      <arg name="extra" value="$(arg extra)" />      <!-- Inject extra nodes -->
      <arg name="debug" value="$(arg debug)" />      <!-- Debug a node set   -->
      <arg name="sim" value="$(arg sim)" />          <!-- SIM IP address     -->
      <arg name="llp" value="$(arg llp)" />          <!-- LLP IP address     -->
      <arg name="mlp" value="$(arg mlp)" />          <!-- MLP IP address     -->
      <arg name="dds" value="$(arg dds)" />          <!-- Enable DDS         -->
    </include>
  </group>

  <!-- Default call initialize bias so config file is created if not already present -->
  <node pkg="rosservice" type="rosservice" name="imu_calibration" args="call --wait /gnc/ekf/init_bias" />

</launch>
